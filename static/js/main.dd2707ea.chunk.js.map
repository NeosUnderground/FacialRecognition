{"version":3,"sources":["components/logo/brain.png","components/navigation/Navigation.js","components/logo/Logo.js","components/imageLink/ImageLink.js","components/rank/Rank.js","components/faceRocognition/FaceRocognition.js","components/signIn/SignIn.js","components/register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","className","onClick","Logo","tilt_default","options","max","height","width","paddingTop","alt","src","brain","ImageLink","onInputChange","onSubmit","type","onChange","Rank","name","entries","concat","FaceRocognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","href","React","Component","Register","onNameChange","onSubmitRegister","app","Clarifai","App","apiKey","particleOptions","particles","number","density","enable","value_area","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","models","predict","FACE_DETECT_MODEL","count","assign","catch","console","log","err","_this$state","particles_default","params","navigation_Navigation","components_logo_Logo","rank_Rank","imageLink_ImageLink","faceRocognition_FaceRocognition","signIn_SignIn","register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd2707ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.5ffac590.png\";","import React from 'react';\r\n\r\nconst Navigation =({onRouteChange, isSignedIn})=>{\r\n\r\n    if(isSignedIn){\r\n      return(\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p className='f3 link dim black underline pa3 pointer' onClick={()=> onRouteChange('signout')}>Sign Out</p>\r\n        </nav>\r\n      );\r\n    }\r\n    else{\r\n      return(\r\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n        <p className='f3 link dim black underline pa3 pointer' onClick={()=> onRouteChange('signin')}>Sign In</p>\r\n        <p className='f3 link dim black underline pa3 pointer' onClick={()=> onRouteChange('register')}>Register</p>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo =()=>{\r\n  return(\r\n    <div className='ma4 mt0'>\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 200, width: 200 }} >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{paddingTop:'5px', }} alt='logo'  src={brain}/>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './imageLink.css';\r\n\r\nconst ImageLink =({onInputChange, onSubmit})=>{\r\n  return(\r\n    <div className=''>\r\n      <p className='f3'>\r\n        {'This app will detect factes in your pictures. Paste an image link URL to start!'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='pa4 br3 center form shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n          <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple br5' onClick={onSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLink;\r\n","import React from 'react';\r\n\r\nconst Rank =({name, entries})=>{\r\n  return(\r\n    <div>\r\n      <div className='white f3'>\r\n        {`${name} , your current entry count is...`}\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './faceRecognition.css';\r\n\r\nconst FaceRocognition =({imageUrl, box})=>{\r\n  return(\r\n    <div className='center ma'>\r\n      <div className='absolute ma2'>\r\n        <img alt='' id='inputImage' src={imageUrl} width='500px' height='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default FaceRocognition;\r\n","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    }\r\n  }\r\n\r\n  onEmailChange=(event)=>{\r\n    this.setState({signInEmail: event.target.value})\r\n  }\r\n\r\n  onPasswordChange=(event)=>{\r\n    this.setState({signInPassword: event.target.value})\r\n  }\r\n\r\n  onSubmitSignIn=()=>{\r\n    fetch('http://localhost:3000/signin', {\r\n      method:'post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id){\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {onRouteChange} = this.props;\r\n    return(\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n                onClick={this.onSubmitSignIn}/>\r\n            </div>\r\n            <div className=\"lh-copy mt3 pointer\">\r\n              <p href=\"#0\" className=\"f6 link dim black db\" onClick={()=> onRouteChange('register')}>Register </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n      export default SignIn;\r\n","import React from 'react';\r\n\r\nclass Register extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      email: '',\r\n      password: '',\r\n      name:''\r\n    }\r\n  }\r\n\r\n  onNameChange=(event)=>{\r\n    this.setState({name: event.target.value})\r\n  }\r\n\r\n  onEmailChange=(event)=>{\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n  onPasswordChange=(event)=>{\r\n    this.setState({password: event.target.value})\r\n  }\r\n\r\n  onSubmitRegister=()=>{\r\n    fetch('http://localhost:3000/register', {\r\n      method:'post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(user => {\r\n      if (user.id){\r\n        this.props.loadUser(user)\r\n        this.props.onRouteChange('home');\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                onClick={this.onSubmitRegister}/>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n      export default Register;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLink from './components/imageLink/ImageLink';\nimport Rank from './components/rank/Rank';\nimport FaceRocognition from './components/faceRocognition/FaceRocognition';\nimport SignIn from './components/signIn/SignIn';\nimport Register from './components/register/Register';\n\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({\n  apiKey: '98310685812b4ce6863efa8c2b1a1181'\n});\n\nconst particleOptions ={\n    particles: {\n      number: {\n      \t value: 125,\n         density: {\n           enable: true,\n           value_area: 800,\n      }\n    }\n  }\n}\n\n\nconst initialState={\n  input:'',\n  imageUrl:'',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user:{\n    id:'',\n    name:'',\n    email:'',\n    entries:0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state=initialState\n  }\n\nloadUser=(data)=>{\n  this.setState({user:{\n    id:data.id,\n    name:data.name,\n    email:data.email,\n    entries:data.entries,\n    joined: data.joined\n  }})\n}\n\ncalculateFaceLocation =(data)=>{\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputImage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n\n  return{\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height),\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box});\n}\n\nonInputChange=(event)=>{\n  this.setState({input: event.target.value});\n}\n\nonSubmit=()=>{\n  this.setState({imageUrl: this.state.input});\n\n  app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n            method:'put',\n            headers:{'Content-Type': 'application/json'},\n            body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count=>{\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n  })\n      // there was an error\n    .catch (err => console.log(err));\n}\n\nonRouteChange =(route) =>{\n  if (route === 'signout'){\n    this.setState(initialState)\n  }\n  else if (route ==='home') {\n      this.setState({isSignedIn: true})\n  }\n  this.setState({route:route});\n}\n\n  render(){\n    const {isSignedIn, imageUrl, route, box} = this.state\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particleOptions}/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home'\n          ?<div>\n            <Logo/>\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n            <ImageLink onInputChange={this.onInputChange} onSubmit={this.onSubmit}/>\n            <FaceRocognition box={box} imageUrl={imageUrl}/>\n          </div>\n          :(\n            route==='signin'\n              ?  <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n              :  <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}